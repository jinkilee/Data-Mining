from PIL import Image
import os

def colormap(s):
	s_out = []

	for ch in s:   # assume always '\x00' or '\x01'
		if ch == '\x00':
			s_out.append('\x00')  # black
		else:
			s_out.append('\xFF')  # white
	return ''.join(s_out)

def convert_binary(filename, N=50):
	# read a given binary file
	binary = open(filename, "rb")

	# read binary file and do colormapping
	data = binary.read(N*N)
	data = colormap(data)

	return data

def save_image(filename, data, N=50):
	# convert string to grayscale image
	img = Image.frombytes('L', (N,N), data)
	img.save(filename, "JPEG")

def main():
	N = 100

	binary_dir = os.getcwd() + "/Data/"
	image_dir  = os.getcwd() + "/Image/"
	filename_list = os.listdir(binary_dir)

	for filename in filename_list:
		# get output filename
		name = filename.split(".")[0]

		# convert binary and save it into image file
		bin_data = convert_binary(binary_dir+filename, N)
		save_image(image_dir+name+".jpeg", bin_data, N)

if __name__ == "__main__":
	main()
