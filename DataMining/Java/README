# Lesson on 160717
non-static method can be called from static method only if the class of that non-static method is loaded in the static method.

# Lesson on 160718
package can be created by defining "package package_name;" on the top of .java file
To compile, "javac -d . Test.java" -> This will create a class file into the folder this java file has on the top.
To make a use of package, "import package_name;"

# Lesson on 160719
Relocated every function into right class.
Modified sample()

# Lesson on 160720
Implemented Vector addition/subtraction/multiplication/division

# Lesson on 160721
Implemented overloaded function of Vector addition/subtraction/multiplication/division

# Lesson on 160722
Implemented matrix dot product function inside Matrix.java

# Lesson on 160723
Implemented removeElem matrix inside Matirx.java

# Lesson on 160725
Studied about Inheritance
- sub-class inherit all public/protected members of super-class.
- sub-class cannot inherit any private members of super-class.
- however, if super-class has a public/protected function to access its private member, sub-class can access it.
- Object obj = new Bicycle(1,2,3); -> NO compile error, BUT does not work.
- Object obj = new Bicycle(1,2,3); Bicycle bike = obj; -> Compile error, because obj can be any class.
- Object obj = new Bicycle(1,2,3); Bicycle bike = (Bicycle)obj -> No compile error, and works well.
- Also it is good to check type casting with "instanceof" operator.

# Lesson on 160726
Studied about GarbageCollection, Abstract Method
- Java automatically performs GarbageCollection unlike C or C++.
- Object finalize() function can be run by GarbageCollection once there is no more reference to garbage-collect.
- But finalize() function should not be used.
- Abstract Class is a class that includes at least one Abstract method.
- Abstract method is supposed to be implemented by any of its sub-class.
- If sub-class does not include the implementation of parent's abstract method, it should also note the method as abstract method.

# Lesson on 160727
Will study about Try/Catch.
